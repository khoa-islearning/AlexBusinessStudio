<form class="search-bar">
    <input type="text" placeholder="Search" style="border-radius: 5px;" @bind-value=@searchString>
    
    <div class="info-bar-left">
        <label class="info-bar-left"> <h4>Tags:</h4></label>
        <RadzenDropDown AllowClear="true" AllowFiltering="true" FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive"
                            @bind-Value=@multipleValues Multiple="true" Placeholder="Select..." Data=@tagList TextProperty="Name" ValueProperty="Name"
                             Class="w-100" />
    </div>

    <label class="info-bar-left"> <h4>Date</h4></label>
    <div class="info-bar-left info-bar-item">
        <label for="start_date">Start date:</label>
        <RadzenDatePicker @bind-Value=@start DateFormat="d"   />
    </div>

    <div class="info-bar-left info-bar-item">
        <label for="end_date">End date:</label>
         <RadzenDatePicker @bind-Value=@end DateFormat="d"   />
    </div>

    <br />


    <label class="info-bar-left"> <h4>List status</h4></label>
    <div class="info-bar-left info-bar-item">
        <RadzenCheckBox @bind-Value=@nlisted  Name="NotListed" TValue="bool" />
                <RadzenLabel Text="Not Listed" Component="NotListed" Style="margin-left: 8px; vertical-align: middle;" />
        <br />
       <RadzenCheckBox @bind-Value=@listed  Name="Listed" TValue="bool" />
                <RadzenLabel Text="Listed" Component="Listed" Style="margin-left: 8px; vertical-align: middle;" />
        <br />
        <RadzenCheckBox @bind-Value=@sold  Name="Sold" TValue="bool" />
                <RadzenLabel Text="Sold" Component="Sold" Style="margin-left: 8px; vertical-align: middle;" />
    </div>

    <br />

    <div class="info-bar-left">
        <label class="info-bar-left"> <h4>Sort by:</h4></label>
        <RadzenDropDown TValue="int" @bind-value=sort Data=@data TextProperty="Name" ValueProperty="Id" />
    </div>
    <br />
</form>
<div class="row  d-flex flex-column" style="align-items:center; align-self:flex-end; margin: auto">
    <div style="justify-self:flex-end ; margin: auto; display:flex; flex-direction: column; align-items : center">
        <button  style="width: 100pxmax-content;" class="btn btn-success" @onclick="@(() => OnSearch.InvokeAsync(new SearchArg(sort, new bool[] {nlisted, listed, sold}, start, end,searchString, (multipleValues == null) ? (new String[] {}) : multipleValues.ToArray())))">
            Search
        </button>
    </div>
</div>

@inject IJSRuntime js
@using  AlexBusinessStudio.Data
@code{

    [Parameter] public EventCallback<SearchArg> OnSearch { get; set; }
    public string searchString = "";
    public bool sold = true;
    public bool listed = true;
    public bool nlisted = true;

    int sort = 0;
    public DateTime start = new DateTime(2000,01,01);
    public DateTime end = DateTime.Now;


    IEnumerable<string> multipleValues = new string[] {};
    public class Tag
    {
        public string Name { get; set; }
    }

    public Tag[] tagList = new Tag[]
        {
        new Tag {Name = "Nature"},
        new Tag {Name = "Animal"},
        new Tag {Name = "Dog"},
        new Tag {Name = "Cat"},
        new Tag {Name = "Bird"},
        new Tag {Name = "City"},
        new Tag {Name = "Rain"},
        new Tag {Name = "Ocean"},
        new Tag {Name = "Cycling"},
        new Tag {Name = "Sport"},
        };

    public class MyObject
    {
        public int Id { get; set; }
        public string Name { get; set; }
    }


    IEnumerable<MyObject> data = new MyObject[] 
    {
        new MyObject() {
            Id = 0,
            Name = "Name"
        },
        new MyObject() {
            Id = 1,
            Name = "Size"
        }, 
        new MyObject() {
            Id = 2,
            Name = "Date" 
        }
    };
}